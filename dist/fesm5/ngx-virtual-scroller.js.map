{"version":3,"file":"ngx-virtual-scroller.js","sources":["ng://ngx-virtual-scroller/virtual-scroller.ts","ng://ngx-virtual-scroller/ngx-virtual-scroller.ts"],"sourcesContent":["import {\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  NgModule,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  Renderer2,\n  ViewChild,\n} from '@angular/core';\n\nimport {PLATFORM_ID} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\n\nimport {CommonModule} from '@angular/common';\n\nimport * as tween from '@tweenjs/tween.js'\n\nexport interface VirtualScrollerDefaultOptions {\n  checkResizeInterval: number\n  modifyOverflowStyleOfParentScroll: boolean,\n  resizeBypassRefreshThreshold: number,\n  scrollAnimationTime: number;\n  scrollDebounceTime: number;\n  scrollThrottlingTime: number;\n  scrollbarHeight?: number;\n  scrollbarWidth?: number;\n  stripedTable: boolean\n}\n\nexport function VIRTUAL_SCROLLER_DEFAULT_OPTIONS_FACTORY(): VirtualScrollerDefaultOptions {\n  return {\n    checkResizeInterval: 1000,\n    modifyOverflowStyleOfParentScroll: true,\n    resizeBypassRefreshThreshold: 5,\n    scrollAnimationTime: 750,\n    scrollDebounceTime: 0,\n    scrollThrottlingTime: 0,\n    stripedTable: false\n  };\n}\n\nexport interface WrapGroupDimensions {\n  maxChildSizePerWrapGroup: WrapGroupDimension[];\n  numberOfKnownWrapGroupChildSizes: number;\n  sumOfKnownWrapGroupChildHeights: number;\n  sumOfKnownWrapGroupChildWidths: number;\n}\n\nexport interface WrapGroupDimension {\n  childHeight: number;\n  childWidth: number;\n  items: any[];\n}\n\nexport interface IDimensions {\n  childHeight: number;\n  childWidth: number;\n  itemCount: number;\n  itemsPerPage: number;\n  itemsPerWrapGroup: number;\n  maxScrollPosition: number;\n  pageCount_fractional: number;\n  scrollLength: number;\n  viewportLength: number;\n  wrapGroupsPerPage: number;\n}\n\nexport interface IPageInfo {\n  endIndex: number;\n  endIndexWithBuffer: number;\n  maxScrollPosition: number;\n  scrollEndPosition: number;\n  scrollStartPosition: number;\n  startIndex: number;\n  startIndexWithBuffer: number;\n}\n\nexport interface IViewport extends IPageInfo {\n  padding: number;\n  scrollLength: number;\n}\n\n@Component({\n  selector: 'virtual-scroller,[virtualScroller]',\n  exportAs: 'virtualScroller',\n  template: `\n      <ng-content select=\"[outbounds]\"></ng-content>\n      <div class=\"total-padding\" #invisiblePadding></div>\n      <div class=\"scrollable-content\" #content>\n          <ng-content></ng-content>\n      </div>\n  `,\n  host: {\n    '[class.horizontal]': \"horizontal\",\n    '[class.vertical]': \"!horizontal\",\n    '[class.selfScroll]': \"!parentScroll\",\n    '[class.rtl]': \"RTL\"\n  },\n  styles: [`\n      :host {\n          position: relative;\n          display: block;\n          -webkit-overflow-scrolling: touch;\n      }\n\n      :host.horizontal.selfScroll {\n          overflow-y: visible;\n          overflow-x: auto;\n      }\n\n      :host.horizontal.selfScroll.rtl {\n          transform: scaleX(-1);\n      }\n\n      :host.vertical.selfScroll {\n          overflow-y: auto;\n          overflow-x: visible;\n      }\n\n      .scrollable-content {\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n          max-width: 100vw;\n          max-height: 100vh;\n          position: absolute;\n      }\n\n      .scrollable-content ::ng-deep > * {\n          box-sizing: border-box;\n      }\n\n      :host.horizontal {\n          white-space: nowrap;\n      }\n\n      :host.horizontal .scrollable-content {\n          display: flex;\n      }\n\n      :host.horizontal .scrollable-content ::ng-deep > * {\n          flex-shrink: 0;\n          flex-grow: 0;\n          white-space: initial;\n      }\n\n      :host.horizontal.rtl .scrollable-content ::ng-deep > * {\n          transform: scaleX(-1);\n      }\n\n      .total-padding {\n          position: absolute;\n          top: 0;\n          left: 0;\n          height: 1px;\n          width: 1px;\n          transform-origin: 0 0;\n          opacity: 0;\n      }\n\n      :host.horizontal .total-padding {\n          height: 100%;\n      }\n  `]\n})\nexport class VirtualScrollerComponent implements OnInit, OnChanges, OnDestroy {\n  public viewPortItems: any[];\n  public window = window;\n\n  public get viewPortInfo(): IPageInfo {\n    let pageInfo: IViewport = this.previousViewPort || <any>{};\n    return {\n      startIndex: pageInfo.startIndex || 0,\n      endIndex: pageInfo.endIndex || 0,\n      scrollStartPosition: pageInfo.scrollStartPosition || 0,\n      scrollEndPosition: pageInfo.scrollEndPosition || 0,\n      maxScrollPosition: pageInfo.maxScrollPosition || 0,\n      startIndexWithBuffer: pageInfo.startIndexWithBuffer || 0,\n      endIndexWithBuffer: pageInfo.endIndexWithBuffer || 0\n    };\n  }\n\n  @Input()\n  public executeRefreshOutsideAngularZone: boolean = false;\n\n  protected _enableUnequalChildrenSizes: boolean = false;\n  @Input()\n  public get enableUnequalChildrenSizes(): boolean {\n    return this._enableUnequalChildrenSizes;\n  }\n\n  public set enableUnequalChildrenSizes(value: boolean) {\n    if (this._enableUnequalChildrenSizes === value) {\n      return;\n    }\n\n    this._enableUnequalChildrenSizes = value;\n    this.minMeasuredChildWidth = undefined;\n    this.minMeasuredChildHeight = undefined;\n  }\n\n  @Input()\n  public RTL: boolean = false;\n\n  @Input()\n  public useMarginInsteadOfTranslate: boolean = false;\n\n  @Input()\n  public modifyOverflowStyleOfParentScroll: boolean;\n\n  @Input()\n  public stripedTable: boolean;\n\n  @Input()\n  public scrollbarWidth: number;\n\n  @Input()\n  public scrollbarHeight: number;\n\n  @Input()\n  public childWidth: number;\n\n  @Input()\n  public childHeight: number;\n\n  @Input()\n  public ssrChildWidth: number;\n\n  @Input()\n  public ssrChildHeight: number;\n\n  @Input()\n  public ssrViewportWidth: number = 1920;\n\n  @Input()\n  public ssrViewportHeight: number = 1080;\n\n  protected _bufferAmount: number;\n  @Input()\n  public get bufferAmount(): number {\n    if (typeof (this._bufferAmount) === 'number' && this._bufferAmount >= 0) {\n      return this._bufferAmount;\n    } else {\n      return this.enableUnequalChildrenSizes ? 5 : 0;\n    }\n  }\n\n  public set bufferAmount(value: number) {\n    this._bufferAmount = value;\n  }\n\n  @Input()\n  public scrollAnimationTime: number;\n\n  @Input()\n  public resizeBypassRefreshThreshold: number;\n\n  protected _scrollThrottlingTime: number;\n  @Input()\n  public get scrollThrottlingTime(): number {\n    return this._scrollThrottlingTime;\n  }\n\n  public set scrollThrottlingTime(value: number) {\n    this._scrollThrottlingTime = value;\n    this.updateOnScrollFunction();\n  }\n\n  protected _scrollDebounceTime: number;\n  @Input()\n  public get scrollDebounceTime(): number {\n    return this._scrollDebounceTime;\n  }\n\n  public set scrollDebounceTime(value: number) {\n    this._scrollDebounceTime = value;\n    this.updateOnScrollFunction();\n  }\n\n  protected onScroll: () => void;\n\n  protected updateOnScrollFunction(): void {\n    if (this.scrollDebounceTime) {\n      this.onScroll = <any>this.debounce(() => {\n        this.refresh_internal(false);\n      }, this.scrollDebounceTime);\n    } else if (this.scrollThrottlingTime) {\n      this.onScroll = <any>this.throttleTrailing(() => {\n        this.refresh_internal(false);\n      }, this.scrollThrottlingTime);\n    } else {\n      this.onScroll = () => {\n        this.refresh_internal(false);\n      };\n    }\n  }\n\n  protected checkScrollElementResizedTimer: number;\n  protected _checkResizeInterval: number;\n  @Input()\n  public get checkResizeInterval(): number {\n    return this._checkResizeInterval;\n  }\n\n  public set checkResizeInterval(value: number) {\n    if (this._checkResizeInterval === value) {\n      return;\n    }\n\n    this._checkResizeInterval = value;\n    this.addScrollEventHandlers();\n  }\n\n  protected _items: any[] = [];\n  @Input()\n  public get items(): any[] {\n    return this._items;\n  }\n\n  public set items(value: any[]) {\n    if (value === this._items) {\n      return;\n    }\n\n    this._items = value || [];\n    this.refresh_internal(true);\n  }\n\n  protected _origin: any;\n  @Input()\n  public get origin(): any {\n    return this._origin;\n  }\n\n  public set origin(value: any) {\n    if (value === this._origin) {\n      return;\n    }\n\n    this._origin = value;\n    this.refresh_internal(true);\n  }\n\n  protected _length: number = 0;\n  @Input()\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(value: number) {\n    if (value === this._length) {\n      return;\n    }\n\n    this._length = value || 0;\n    this.refresh_internal(true);\n  }\n\n  @Input()\n  public compareItems: (item1: any, item2: any) => boolean = (item1: any, item2: any) => item1 === item2;\n\n  protected _horizontal: boolean;\n  @Input()\n  public get horizontal(): boolean {\n    return this._horizontal;\n  }\n\n  public set horizontal(value: boolean) {\n    this._horizontal = value;\n    this.updateDirection();\n  }\n\n  protected revertParentOverscroll(): void {\n    const scrollElement = this.getScrollElement();\n    if (scrollElement && this.oldParentScrollOverflow) {\n      scrollElement.style['overflow-y'] = this.oldParentScrollOverflow.y;\n      scrollElement.style['overflow-x'] = this.oldParentScrollOverflow.x;\n    }\n\n    this.oldParentScrollOverflow = undefined;\n  }\n\n  protected oldParentScrollOverflow: { x: string, y: string };\n  protected _parentScroll: Element | Window;\n  @Input()\n  public get parentScroll(): Element | Window {\n    return this._parentScroll;\n  }\n\n  public set parentScroll(value: Element | Window) {\n    if (this._parentScroll === value) {\n      return;\n    }\n\n    this.revertParentOverscroll();\n    this._parentScroll = value;\n    this.addScrollEventHandlers();\n\n    const scrollElement = this.getScrollElement();\n    if (this.modifyOverflowStyleOfParentScroll && scrollElement !== this.element.nativeElement) {\n      this.oldParentScrollOverflow = {x: scrollElement.style['overflow-x'], y: scrollElement.style['overflow-y']};\n      scrollElement.style['overflow-y'] = this.horizontal ? 'visible' : 'auto';\n      scrollElement.style['overflow-x'] = this.horizontal ? 'auto' : 'visible';\n    }\n  }\n\n  @Output()\n  public vsUpdate: EventEmitter<any[]> = new EventEmitter<any[]>();\n\n  @Output()\n  public vsChange: EventEmitter<IPageInfo> = new EventEmitter<IPageInfo>();\n\n  @Output()\n  public vsStart: EventEmitter<IPageInfo> = new EventEmitter<IPageInfo>();\n\n  @Output()\n  public vsEnd: EventEmitter<IPageInfo> = new EventEmitter<IPageInfo>();\n\n  @ViewChild('content', {read: ElementRef, static: true})\n  protected contentElementRef: ElementRef;\n\n  @ViewChild('invisiblePadding', {read: ElementRef, static: true})\n  protected invisiblePaddingElementRef: ElementRef;\n\n  @ContentChild('header', {read: ElementRef, static: false})\n  protected headerElementRef: ElementRef;\n\n  @ContentChild('container', {read: ElementRef, static: false})\n  protected containerElementRef: ElementRef;\n\n  public ngOnInit(): void {\n    this.addScrollEventHandlers();\n  }\n\n  public ngOnDestroy(): void {\n    this.removeScrollEventHandlers();\n    this.revertParentOverscroll();\n  }\n\n  public ngOnChanges(changes: any): void {\n    let indexLengthChanged = this.cachedItemsLength !== this.listLength;\n    this.cachedItemsLength = this.listLength;\n\n    const firstRun: boolean = !changes.items || !changes.items.previousValue || changes.items.previousValue.length === 0\n      || changes.length === 0;\n    this.refresh_internal(indexLengthChanged || firstRun);\n  }\n\n  public ngDoCheck(): void {\n    if (this.cachedItemsLength !== this.listLength) {\n      this.cachedItemsLength = this.listLength;\n      this.refresh_internal(true);\n      return;\n    }\n\n    if (this.previousViewPort && this.viewPortItems && this.viewPortItems.length > 0) {\n      let itemsArrayChanged = false;\n      for (let i = 0; i < this.viewPortItems.length; ++i) {\n        if (!this.compareItems(this.items[this.previousViewPort.startIndexWithBuffer + i], this.viewPortItems[i])) {\n          itemsArrayChanged = true;\n          break;\n        }\n      }\n      if (itemsArrayChanged) {\n        this.refresh_internal(true);\n      }\n    }\n  }\n\n  public refresh(): void {\n    this.refresh_internal(true);\n  }\n\n  public invalidateAllCachedMeasurements(): void {\n    this.wrapGroupDimensions = {\n      maxChildSizePerWrapGroup: [],\n      numberOfKnownWrapGroupChildSizes: 0,\n      sumOfKnownWrapGroupChildWidths: 0,\n      sumOfKnownWrapGroupChildHeights: 0\n    };\n\n    this.minMeasuredChildWidth = undefined;\n    this.minMeasuredChildHeight = undefined;\n\n    this.refresh_internal(false);\n  }\n\n  public invalidateCachedMeasurementForItem(item: any): void {\n    if (this.enableUnequalChildrenSizes) {\n      let index = this.items && this.items.indexOf(item);\n      if (index >= 0) {\n        this.invalidateCachedMeasurementAtIndex(index);\n      }\n    } else {\n      this.minMeasuredChildWidth = undefined;\n      this.minMeasuredChildHeight = undefined;\n    }\n\n    this.refresh_internal(false);\n  }\n\n  public invalidateCachedMeasurementAtIndex(index: number): void {\n    if (this.enableUnequalChildrenSizes) {\n      let cachedMeasurement = this.wrapGroupDimensions.maxChildSizePerWrapGroup[index];\n      if (cachedMeasurement) {\n        this.wrapGroupDimensions.maxChildSizePerWrapGroup[index] = undefined;\n        --this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\n        this.wrapGroupDimensions.sumOfKnownWrapGroupChildWidths -= cachedMeasurement.childWidth || 0;\n        this.wrapGroupDimensions.sumOfKnownWrapGroupChildHeights -= cachedMeasurement.childHeight || 0;\n      }\n    } else {\n      this.minMeasuredChildWidth = undefined;\n      this.minMeasuredChildHeight = undefined;\n    }\n\n    this.refresh_internal(false);\n  }\n\n  public scrollInto(item: any, alignToBeginning: boolean = true, additionalOffset: number = 0, animationMilliseconds: number = undefined, animationCompletedCallback: () => void = undefined): void {\n    let index: number = this.items ? this.items.indexOf(item) : -1;\n    if (index === -1) {\n      return;\n    }\n\n    this.scrollToIndex(index, alignToBeginning, additionalOffset, animationMilliseconds, animationCompletedCallback);\n  }\n\n  public scrollToIndex(index: number, alignToBeginning: boolean = true, additionalOffset: number = 0, animationMilliseconds: number = undefined, animationCompletedCallback: () => void = undefined): void {\n    let maxRetries: number = 5;\n\n    let retryIfNeeded = () => {\n      --maxRetries;\n      if (maxRetries <= 0) {\n        if (animationCompletedCallback) {\n          animationCompletedCallback();\n        }\n        return;\n      }\n\n      let dimensions = this.calculateDimensions();\n      let desiredStartIndex = Math.min(Math.max(index, 0), dimensions.itemCount - 1);\n      if (this.previousViewPort.startIndex === desiredStartIndex) {\n        if (animationCompletedCallback) {\n          animationCompletedCallback();\n        }\n        return;\n      }\n\n      this.scrollToIndex_internal(index, alignToBeginning, additionalOffset, 0, retryIfNeeded);\n    };\n\n    this.scrollToIndex_internal(index, alignToBeginning, additionalOffset, animationMilliseconds, retryIfNeeded);\n  }\n\n  protected scrollToIndex_internal(index: number, alignToBeginning: boolean = true, additionalOffset: number = 0, animationMilliseconds: number = undefined, animationCompletedCallback: () => void = undefined): void {\n    animationMilliseconds = animationMilliseconds === undefined ? this.scrollAnimationTime : animationMilliseconds;\n\n    let dimensions = this.calculateDimensions();\n    let scroll = this.calculatePadding(index, dimensions) + additionalOffset;\n    if (!alignToBeginning) {\n      scroll -= dimensions.wrapGroupsPerPage * dimensions[this._childScrollDim];\n    }\n\n    this.scrollToPosition(scroll, animationMilliseconds, animationCompletedCallback);\n  }\n\n  public scrollToPosition(scrollPosition: number, animationMilliseconds: number = undefined, animationCompletedCallback: () => void = undefined): void {\n    scrollPosition += this.getElementsOffset();\n\n    animationMilliseconds = animationMilliseconds === undefined ? this.scrollAnimationTime : animationMilliseconds;\n\n    let scrollElement = this.getScrollElement();\n\n    let animationRequest: number;\n\n    if (this.currentTween) {\n      this.currentTween.stop();\n      this.currentTween = undefined;\n    }\n\n    if (!animationMilliseconds) {\n      this.renderer.setProperty(scrollElement, this._scrollType, scrollPosition);\n      this.refresh_internal(false, animationCompletedCallback);\n      return;\n    }\n\n    const tweenConfigObj = {scrollPosition: scrollElement[this._scrollType]};\n\n    let newTween = new tween.Tween(tweenConfigObj)\n      .to({scrollPosition}, animationMilliseconds)\n      .easing(tween.Easing.Quadratic.Out)\n      .onUpdate((data) => {\n        if (isNaN(data.scrollPosition)) {\n          return;\n        }\n        this.renderer.setProperty(scrollElement, this._scrollType, data.scrollPosition);\n        this.refresh_internal(false);\n      })\n      .onStop(() => {\n        cancelAnimationFrame(animationRequest);\n      })\n      .start();\n\n    const animate = (time?: number) => {\n      if (!newTween[\"isPlaying\"]()) {\n        return;\n      }\n\n      newTween.update(time);\n      if (tweenConfigObj.scrollPosition === scrollPosition) {\n        this.refresh_internal(false, animationCompletedCallback);\n        return;\n      }\n\n      this.zone.runOutsideAngular(() => {\n        animationRequest = requestAnimationFrame(animate);\n      });\n    };\n\n    animate();\n    this.currentTween = newTween;\n  }\n\n  protected isAngularUniversalSSR: boolean;\n\n  constructor(\n    protected readonly element: ElementRef,\n    protected readonly renderer: Renderer2,\n    protected readonly zone: NgZone,\n    protected changeDetectorRef: ChangeDetectorRef,\n    @Inject(PLATFORM_ID) platformId: Object,\n    @Optional() @Inject('virtual-scroller-default-options')\n      options: VirtualScrollerDefaultOptions\n  ) {\n\n    this.isAngularUniversalSSR = isPlatformServer(platformId);\n\n    this.checkResizeInterval = options.checkResizeInterval;\n    this.modifyOverflowStyleOfParentScroll = options.modifyOverflowStyleOfParentScroll;\n    this.resizeBypassRefreshThreshold = options.resizeBypassRefreshThreshold;\n    this.scrollAnimationTime = options.scrollAnimationTime;\n    this.scrollDebounceTime = options.scrollDebounceTime;\n    this.scrollThrottlingTime = options.scrollThrottlingTime;\n    this.scrollbarHeight = options.scrollbarHeight;\n    this.scrollbarWidth = options.scrollbarWidth;\n    this.stripedTable = options.stripedTable;\n\n    this.horizontal = false;\n    this.resetWrapGroupDimensions();\n  }\n\n  protected get listLength(): number {\n    return this.length || (this.items && this.items.length) || 0;\n  }\n\n  protected getElementSize(element: HTMLElement): ClientRect {\n    let result = element.getBoundingClientRect();\n    let styles = getComputedStyle(element);\n    let marginTop = parseInt(styles['margin-top'], 10) || 0;\n    let marginBottom = parseInt(styles['margin-bottom'], 10) || 0;\n    let marginLeft = parseInt(styles['margin-left'], 10) || 0;\n    let marginRight = parseInt(styles['margin-right'], 10) || 0;\n\n    return {\n      top: result.top + marginTop,\n      bottom: result.bottom + marginBottom,\n      left: result.left + marginLeft,\n      right: result.right + marginRight,\n      width: result.width + marginLeft + marginRight,\n      height: result.height + marginTop + marginBottom\n    };\n  }\n\n  protected previousScrollBoundingRect: ClientRect;\n\n  protected checkScrollElementResized(): void {\n    let boundingRect = this.getElementSize(this.getScrollElement());\n\n    let sizeChanged: boolean;\n    if (!this.previousScrollBoundingRect) {\n      sizeChanged = true;\n    } else {\n      let widthChange = Math.abs(boundingRect.width - this.previousScrollBoundingRect.width);\n      let heightChange = Math.abs(boundingRect.height - this.previousScrollBoundingRect.height);\n      sizeChanged = widthChange > this.resizeBypassRefreshThreshold || heightChange > this.resizeBypassRefreshThreshold;\n    }\n\n    if (sizeChanged) {\n      this.previousScrollBoundingRect = boundingRect;\n      if (boundingRect.width > 0 && boundingRect.height > 0) {\n        this.refresh_internal(false);\n      }\n    }\n  }\n\n  protected _invisiblePaddingProperty;\n  protected _offsetType;\n  protected _scrollType;\n  protected _pageOffsetType;\n  protected _childScrollDim;\n  protected _translateDir;\n  protected _marginDir;\n\n  protected updateDirection(): void {\n    if (this.horizontal) {\n      this._childScrollDim = 'childWidth';\n      this._invisiblePaddingProperty = 'scaleX';\n      this._marginDir = 'margin-left';\n      this._offsetType = 'offsetLeft';\n      this._pageOffsetType = 'pageXOffset';\n      this._scrollType = 'scrollLeft';\n      this._translateDir = 'translateX';\n    } else {\n      this._childScrollDim = 'childHeight';\n      this._invisiblePaddingProperty = 'scaleY';\n      this._marginDir = 'margin-top';\n      this._offsetType = 'offsetTop';\n      this._pageOffsetType = 'pageYOffset';\n      this._scrollType = 'scrollTop';\n      this._translateDir = 'translateY';\n    }\n  }\n\n  protected debounce(func: Function, wait: number): Function {\n    const throttled = this.throttleTrailing(func, wait);\n    const result = function () {\n      throttled['cancel']();\n      throttled.apply(this, arguments);\n    };\n    result['cancel'] = function () {\n      throttled['cancel']();\n    };\n\n    return result;\n  }\n\n  protected throttleTrailing(func: Function, wait: number): Function {\n    let timeout = undefined;\n    let _arguments = arguments;\n    const result = function () {\n      const _this = this;\n      _arguments = arguments\n\n      if (timeout) {\n        return;\n      }\n\n      if (wait <= 0) {\n        func.apply(_this, _arguments);\n      } else {\n        timeout = setTimeout(function () {\n          timeout = undefined;\n          func.apply(_this, _arguments);\n        }, wait);\n      }\n    };\n    result['cancel'] = function () {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = undefined;\n      }\n    };\n\n    return result;\n  }\n\n  protected calculatedScrollbarWidth: number = 0;\n  protected calculatedScrollbarHeight: number = 0;\n\n  protected padding: number = 0;\n  protected previousViewPort: IViewport = <any>{};\n  protected currentTween: tween.Tween;\n  protected cachedItemsLength: number;\n\n  protected disposeScrollHandler: () => void | undefined;\n  protected disposeResizeHandler: () => void | undefined;\n\n  protected refresh_internal(itemsArrayModified: boolean, refreshCompletedCallback: () => void = undefined, maxRunTimes: number = 2): void {\n    //note: maxRunTimes is to force it to keep recalculating if the previous iteration caused a re-render (different sliced items in viewport or scrollPosition changed).\n    //The default of 2x max will probably be accurate enough without causing too large a performance bottleneck\n    //The code would typically quit out on the 2nd iteration anyways. The main time it'd think more than 2 runs would be necessary would be for vastly different sized child items or if this is the 1st time the items array was initialized.\n    //Without maxRunTimes, If the user is actively scrolling this code would become an infinite loop until they stopped scrolling. This would be okay, except each scroll event would start an additional infinte loop. We want to short-circuit it to prevent this.\n\n    if (itemsArrayModified && this.previousViewPort && this.previousViewPort.scrollStartPosition > 0) {\n      //if items were prepended, scroll forward to keep same items visible\n      let oldViewPort = this.previousViewPort;\n      let oldViewPortItems = this.viewPortItems;\n\n      let oldRefreshCompletedCallback = refreshCompletedCallback;\n      refreshCompletedCallback = () => {\n        let scrollLengthDelta = this.previousViewPort.scrollLength - oldViewPort.scrollLength;\n        if (scrollLengthDelta > 0 && this.viewPortItems && this.items) {\n          let oldStartItem = oldViewPortItems[0];\n          let oldStartItemIndex = this.items.findIndex(x => this.compareItems(oldStartItem, x));\n          if (oldStartItemIndex > this.previousViewPort.startIndexWithBuffer) {\n            let itemOrderChanged = false;\n            for (let i = 1; i < this.viewPortItems.length; ++i) {\n              if (!this.compareItems(this.items[oldStartItemIndex + i], oldViewPortItems[i])) {\n                itemOrderChanged = true;\n                break;\n              }\n            }\n\n            if (!itemOrderChanged) {\n              this.scrollToPosition(this.previousViewPort.scrollStartPosition + scrollLengthDelta, 0, oldRefreshCompletedCallback);\n              return;\n            }\n          }\n        }\n\n        if (oldRefreshCompletedCallback) {\n          oldRefreshCompletedCallback();\n        }\n      };\n    }\n\n    this.zone.runOutsideAngular(() => {\n      requestAnimationFrame(() => {\n\n        if (itemsArrayModified) {\n          this.resetWrapGroupDimensions();\n        }\n        let viewport = this.calculateViewport();\n\n        let startChanged = itemsArrayModified || viewport.startIndex !== this.previousViewPort.startIndex;\n        let endChanged = itemsArrayModified || viewport.endIndex !== this.previousViewPort.endIndex;\n        let scrollLengthChanged = viewport.scrollLength !== this.previousViewPort.scrollLength;\n        let paddingChanged = viewport.padding !== this.previousViewPort.padding;\n        let scrollPositionChanged = viewport.scrollStartPosition !== this.previousViewPort.scrollStartPosition || viewport.scrollEndPosition !== this.previousViewPort.scrollEndPosition || viewport.maxScrollPosition !== this.previousViewPort.maxScrollPosition;\n\n        this.previousViewPort = viewport;\n\n        if (scrollLengthChanged) {\n          this.renderer.setStyle(this.invisiblePaddingElementRef.nativeElement, 'transform', `${this._invisiblePaddingProperty}(${viewport.scrollLength})`);\n          this.renderer.setStyle(this.invisiblePaddingElementRef.nativeElement, 'webkitTransform', `${this._invisiblePaddingProperty}(${viewport.scrollLength})`);\n        }\n\n        if (paddingChanged) {\n          if (this.useMarginInsteadOfTranslate) {\n            this.renderer.setStyle(this.contentElementRef.nativeElement, this._marginDir, `${viewport.padding}px`);\n          } else {\n            this.renderer.setStyle(this.contentElementRef.nativeElement, 'transform', `${this._translateDir}(${viewport.padding}px)`);\n            this.renderer.setStyle(this.contentElementRef.nativeElement, 'webkitTransform', `${this._translateDir}(${viewport.padding}px)`);\n          }\n        }\n\n        if (this.headerElementRef) {\n          let scrollPosition = this.getScrollElement()[this._scrollType];\n          let containerOffset = this.getElementsOffset();\n          let offset = Math.max(scrollPosition - viewport.padding - containerOffset + this.headerElementRef.nativeElement.clientHeight, 0);\n          this.renderer.setStyle(this.headerElementRef.nativeElement, 'transform', `${this._translateDir}(${offset}px)`);\n          this.renderer.setStyle(this.headerElementRef.nativeElement, 'webkitTransform', `${this._translateDir}(${offset}px)`);\n        }\n\n        const changeEventArg: IPageInfo = (startChanged || endChanged) ? {\n          startIndex: viewport.startIndex,\n          endIndex: viewport.endIndex,\n          scrollStartPosition: viewport.scrollStartPosition,\n          scrollEndPosition: viewport.scrollEndPosition,\n          startIndexWithBuffer: viewport.startIndexWithBuffer,\n          endIndexWithBuffer: viewport.endIndexWithBuffer,\n          maxScrollPosition: viewport.maxScrollPosition\n        } : undefined;\n\n\n        if (startChanged || endChanged || scrollPositionChanged) {\n          const handleChanged = () => {\n            if (this.items) {\n              // update the scroll list to trigger re-render of components in viewport\n              this.viewPortItems = viewport.startIndexWithBuffer >= 0 && viewport.endIndexWithBuffer >= 0 ? this.items.slice(viewport.startIndexWithBuffer, viewport.endIndexWithBuffer + 1) : [];\n              this.vsUpdate.emit(this.viewPortItems);\n            }\n\n            if (startChanged) {\n              this.vsStart.emit(changeEventArg);\n            }\n\n            if (endChanged) {\n              this.vsEnd.emit(changeEventArg);\n            }\n\n            if (startChanged || endChanged) {\n              this.changeDetectorRef.markForCheck();\n              this.vsChange.emit(changeEventArg);\n            }\n\n            if (maxRunTimes > 0) {\n              this.refresh_internal(false, refreshCompletedCallback, maxRunTimes - 1);\n              return;\n            }\n\n            if (refreshCompletedCallback) {\n              refreshCompletedCallback();\n            }\n          };\n\n\n          if (this.executeRefreshOutsideAngularZone) {\n            handleChanged();\n          } else {\n            this.zone.run(handleChanged);\n          }\n        } else {\n          if (maxRunTimes > 0 && (scrollLengthChanged || paddingChanged)) {\n            this.refresh_internal(false, refreshCompletedCallback, maxRunTimes - 1);\n            return;\n          }\n\n          if (refreshCompletedCallback) {\n            refreshCompletedCallback();\n          }\n        }\n      });\n    });\n  }\n\n  protected getScrollElement(): HTMLElement {\n    return this.parentScroll instanceof Window ? document.scrollingElement || document.documentElement || document.body : this.parentScroll || this.element.nativeElement;\n  }\n\n  protected addScrollEventHandlers(): void {\n    if (this.isAngularUniversalSSR) {\n      return;\n    }\n\n    let scrollElement = this.getScrollElement();\n\n    this.removeScrollEventHandlers();\n\n    this.zone.runOutsideAngular(() => {\n      if (this.parentScroll instanceof Window) {\n        this.disposeScrollHandler = this.renderer.listen('window', 'scroll', this.onScroll);\n        this.disposeResizeHandler = this.renderer.listen('window', 'resize', this.onScroll);\n      } else {\n        this.disposeScrollHandler = this.renderer.listen(scrollElement, 'scroll', this.onScroll);\n        if (this._checkResizeInterval > 0) {\n          this.checkScrollElementResizedTimer = <any>setInterval(() => {\n            this.checkScrollElementResized();\n          }, this._checkResizeInterval);\n        }\n      }\n    });\n  }\n\n  protected removeScrollEventHandlers(): void {\n    if (this.checkScrollElementResizedTimer) {\n      clearInterval(this.checkScrollElementResizedTimer);\n    }\n\n    if (this.disposeScrollHandler) {\n      this.disposeScrollHandler();\n      this.disposeScrollHandler = undefined;\n    }\n\n    if (this.disposeResizeHandler) {\n      this.disposeResizeHandler();\n      this.disposeResizeHandler = undefined;\n    }\n  }\n\n  protected getElementsOffset(): number {\n    if (this.isAngularUniversalSSR) {\n      return 0;\n    }\n\n    let offset = 0;\n\n    if (this.containerElementRef && this.containerElementRef.nativeElement) {\n      offset += this.containerElementRef.nativeElement[this._offsetType];\n    }\n\n    if (this.parentScroll) {\n      let scrollElement = this.getScrollElement();\n      let elementClientRect = this.getElementSize(this.element.nativeElement);\n      let scrollClientRect = this.getElementSize(scrollElement);\n      if (this.horizontal) {\n        offset += elementClientRect.left - scrollClientRect.left;\n      } else {\n        offset += elementClientRect.top - scrollClientRect.top;\n      }\n\n      if (!(this.parentScroll instanceof Window)) {\n        offset += scrollElement[this._scrollType];\n      }\n    }\n\n    return offset;\n  }\n\n  protected countItemsPerWrapGroup(): number {\n    if (this.isAngularUniversalSSR) {\n      return Math.round(this.horizontal ? this.ssrViewportHeight / this.ssrChildHeight : this.ssrViewportWidth / this.ssrChildWidth);\n    }\n\n    let propertyName = this.horizontal ? 'offsetLeft' : 'offsetTop';\n    let children = ((this.containerElementRef && this.containerElementRef.nativeElement) || this.contentElementRef.nativeElement).children;\n\n    let childrenLength = children ? children.length : 0;\n    if (childrenLength === 0) {\n      return 1;\n    }\n\n    let firstOffset = children[0][propertyName];\n    let result = 1;\n    while (result < childrenLength && firstOffset === children[result][propertyName]) {\n      ++result;\n    }\n\n    return result;\n  }\n\n  protected getScrollStartPosition(): number {\n    let windowScrollValue = undefined;\n    if (this.parentScroll instanceof Window) {\n      windowScrollValue = window[this._pageOffsetType];\n    }\n\n    return windowScrollValue || this.getScrollElement()[this._scrollType] || 0;\n  }\n\n  protected minMeasuredChildWidth: number;\n  protected minMeasuredChildHeight: number;\n\n  protected wrapGroupDimensions: WrapGroupDimensions;\n\n  protected resetWrapGroupDimensions(): void {\n    const oldWrapGroupDimensions = this.wrapGroupDimensions;\n    this.invalidateAllCachedMeasurements();\n\n    if (!this.enableUnequalChildrenSizes || !oldWrapGroupDimensions || oldWrapGroupDimensions.numberOfKnownWrapGroupChildSizes === 0) {\n      return;\n    }\n\n    const itemsPerWrapGroup: number = this.countItemsPerWrapGroup();\n    for (let wrapGroupIndex = 0; wrapGroupIndex < oldWrapGroupDimensions.maxChildSizePerWrapGroup.length; ++wrapGroupIndex) {\n      const oldWrapGroupDimension: WrapGroupDimension = oldWrapGroupDimensions.maxChildSizePerWrapGroup[wrapGroupIndex];\n      if (!oldWrapGroupDimension || !oldWrapGroupDimension.items || !oldWrapGroupDimension.items.length) {\n        continue;\n      }\n\n      if (oldWrapGroupDimension.items.length !== itemsPerWrapGroup) {\n        return;\n      }\n\n      let itemsChanged = false;\n      let arrayStartIndex = itemsPerWrapGroup * wrapGroupIndex;\n      for (let i = 0; i < itemsPerWrapGroup; ++i) {\n        if (!this.compareItems(oldWrapGroupDimension.items[i], this.items[arrayStartIndex + i])) {\n          itemsChanged = true;\n          break;\n        }\n      }\n\n      if (!itemsChanged) {\n        ++this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\n        this.wrapGroupDimensions.sumOfKnownWrapGroupChildWidths += oldWrapGroupDimension.childWidth || 0;\n        this.wrapGroupDimensions.sumOfKnownWrapGroupChildHeights += oldWrapGroupDimension.childHeight || 0;\n        this.wrapGroupDimensions.maxChildSizePerWrapGroup[wrapGroupIndex] = oldWrapGroupDimension;\n      }\n    }\n  }\n\n  protected calculateDimensions(): IDimensions {\n    let scrollElement = this.getScrollElement();\n\n    const maxCalculatedScrollBarSize: number = 25; // Note: Formula to auto-calculate doesn't work for ParentScroll, so we default to this if not set by consuming application\n    this.calculatedScrollbarHeight = Math.max(Math.min(scrollElement.offsetHeight - scrollElement.clientHeight, maxCalculatedScrollBarSize), this.calculatedScrollbarHeight);\n    this.calculatedScrollbarWidth = Math.max(Math.min(scrollElement.offsetWidth - scrollElement.clientWidth, maxCalculatedScrollBarSize), this.calculatedScrollbarWidth);\n\n    let viewportWidth = scrollElement.offsetWidth - (this.scrollbarWidth || this.calculatedScrollbarWidth || (this.horizontal ? 0 : maxCalculatedScrollBarSize));\n    let viewportHeight = scrollElement.offsetHeight - (this.scrollbarHeight || this.calculatedScrollbarHeight || (this.horizontal ? maxCalculatedScrollBarSize : 0));\n\n    let content = (this.containerElementRef && this.containerElementRef.nativeElement) || this.contentElementRef.nativeElement;\n\n    let itemsPerWrapGroup = this.countItemsPerWrapGroup();\n    let wrapGroupsPerPage;\n\n    let defaultChildWidth;\n    let defaultChildHeight;\n\n    if (this.isAngularUniversalSSR) {\n      viewportWidth = this.ssrViewportWidth;\n      viewportHeight = this.ssrViewportHeight;\n      defaultChildWidth = this.ssrChildWidth;\n      defaultChildHeight = this.ssrChildHeight;\n      let itemsPerRow = Math.max(Math.ceil(viewportWidth / defaultChildWidth), 1);\n      let itemsPerCol = Math.max(Math.ceil(viewportHeight / defaultChildHeight), 1);\n      wrapGroupsPerPage = this.horizontal ? itemsPerRow : itemsPerCol;\n    } else if (!this.enableUnequalChildrenSizes) {\n      if (content.children.length > 0) {\n        if (!this.childWidth || !this.childHeight) {\n          if (!this.minMeasuredChildWidth && viewportWidth > 0) {\n            this.minMeasuredChildWidth = viewportWidth;\n          }\n          if (!this.minMeasuredChildHeight && viewportHeight > 0) {\n            this.minMeasuredChildHeight = viewportHeight;\n          }\n        }\n\n        let child = content.children[0];\n        let clientRect = this.getElementSize(child);\n        this.minMeasuredChildWidth = Math.min(this.minMeasuredChildWidth, clientRect.width);\n        this.minMeasuredChildHeight = Math.min(this.minMeasuredChildHeight, clientRect.height);\n      }\n\n      defaultChildWidth = this.childWidth || this.minMeasuredChildWidth || viewportWidth;\n      defaultChildHeight = this.childHeight || this.minMeasuredChildHeight || viewportHeight;\n      let itemsPerRow = Math.max(Math.ceil(viewportWidth / defaultChildWidth), 1);\n      let itemsPerCol = Math.max(Math.ceil(viewportHeight / defaultChildHeight), 1);\n      wrapGroupsPerPage = this.horizontal ? itemsPerRow : itemsPerCol;\n    } else {\n      let scrollOffset = scrollElement[this._scrollType] - (this.previousViewPort ? this.previousViewPort.padding : 0);\n\n      let arrayStartIndex = this.previousViewPort.startIndexWithBuffer || 0;\n      let wrapGroupIndex = Math.ceil(arrayStartIndex / itemsPerWrapGroup);\n\n      let maxWidthForWrapGroup = 0;\n      let maxHeightForWrapGroup = 0;\n      let sumOfVisibleMaxWidths = 0;\n      let sumOfVisibleMaxHeights = 0;\n      wrapGroupsPerPage = 0;\n\n      for (let i = 0; i < content.children.length; ++i) {\n        ++arrayStartIndex;\n        let child = content.children[i];\n        let clientRect = this.getElementSize(child);\n\n        maxWidthForWrapGroup = Math.max(maxWidthForWrapGroup, clientRect.width);\n        maxHeightForWrapGroup = Math.max(maxHeightForWrapGroup, clientRect.height);\n\n        if (arrayStartIndex % itemsPerWrapGroup === 0) {\n          let oldValue = this.wrapGroupDimensions.maxChildSizePerWrapGroup[wrapGroupIndex];\n          if (oldValue) {\n            --this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\n            this.wrapGroupDimensions.sumOfKnownWrapGroupChildWidths -= oldValue.childWidth || 0;\n            this.wrapGroupDimensions.sumOfKnownWrapGroupChildHeights -= oldValue.childHeight || 0;\n          }\n\n          ++this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\n          const items = this.items.slice(arrayStartIndex - itemsPerWrapGroup, arrayStartIndex) || [];\n          this.wrapGroupDimensions.maxChildSizePerWrapGroup[wrapGroupIndex] = {\n            childWidth: maxWidthForWrapGroup,\n            childHeight: maxHeightForWrapGroup,\n            items: items\n          };\n          this.wrapGroupDimensions.sumOfKnownWrapGroupChildWidths += maxWidthForWrapGroup;\n          this.wrapGroupDimensions.sumOfKnownWrapGroupChildHeights += maxHeightForWrapGroup;\n\n          if (this.horizontal) {\n            let maxVisibleWidthForWrapGroup = Math.min(maxWidthForWrapGroup, Math.max(viewportWidth - sumOfVisibleMaxWidths, 0));\n            if (scrollOffset > 0) {\n              let scrollOffsetToRemove = Math.min(scrollOffset, maxVisibleWidthForWrapGroup);\n              maxVisibleWidthForWrapGroup -= scrollOffsetToRemove;\n              scrollOffset -= scrollOffsetToRemove;\n            }\n\n            sumOfVisibleMaxWidths += maxVisibleWidthForWrapGroup;\n            if (maxVisibleWidthForWrapGroup > 0 && viewportWidth >= sumOfVisibleMaxWidths) {\n              ++wrapGroupsPerPage;\n            }\n          } else {\n            let maxVisibleHeightForWrapGroup = Math.min(maxHeightForWrapGroup, Math.max(viewportHeight - sumOfVisibleMaxHeights, 0));\n            if (scrollOffset > 0) {\n              let scrollOffsetToRemove = Math.min(scrollOffset, maxVisibleHeightForWrapGroup);\n              maxVisibleHeightForWrapGroup -= scrollOffsetToRemove;\n              scrollOffset -= scrollOffsetToRemove;\n            }\n\n            sumOfVisibleMaxHeights += maxVisibleHeightForWrapGroup;\n            if (maxVisibleHeightForWrapGroup > 0 && viewportHeight >= sumOfVisibleMaxHeights) {\n              ++wrapGroupsPerPage;\n            }\n          }\n\n          ++wrapGroupIndex;\n\n          maxWidthForWrapGroup = 0;\n          maxHeightForWrapGroup = 0;\n        }\n      }\n\n      let averageChildWidth = this.wrapGroupDimensions.sumOfKnownWrapGroupChildWidths / this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\n      let averageChildHeight = this.wrapGroupDimensions.sumOfKnownWrapGroupChildHeights / this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\n      defaultChildWidth = this.childWidth || averageChildWidth || viewportWidth;\n      defaultChildHeight = this.childHeight || averageChildHeight || viewportHeight;\n\n      if (this.horizontal) {\n        if (viewportWidth > sumOfVisibleMaxWidths) {\n          wrapGroupsPerPage += Math.ceil((viewportWidth - sumOfVisibleMaxWidths) / defaultChildWidth);\n        }\n      } else {\n        if (viewportHeight > sumOfVisibleMaxHeights) {\n          wrapGroupsPerPage += Math.ceil((viewportHeight - sumOfVisibleMaxHeights) / defaultChildHeight);\n        }\n      }\n    }\n\n    let itemCount = this.listLength;\n    let itemsPerPage = itemsPerWrapGroup * wrapGroupsPerPage;\n    let pageCount_fractional = itemCount / itemsPerPage;\n    let numberOfWrapGroups = Math.ceil(itemCount / itemsPerWrapGroup);\n\n    let scrollLength = 0;\n\n    let defaultScrollLengthPerWrapGroup = this.horizontal ? defaultChildWidth : defaultChildHeight;\n    if (this.enableUnequalChildrenSizes) {\n      let numUnknownChildSizes = 0;\n      for (let i = 0; i < numberOfWrapGroups; ++i) {\n        let childSize = this.wrapGroupDimensions.maxChildSizePerWrapGroup[i] && this.wrapGroupDimensions.maxChildSizePerWrapGroup[i][this._childScrollDim];\n        if (childSize) {\n          scrollLength += childSize;\n        } else {\n          ++numUnknownChildSizes;\n        }\n      }\n\n      scrollLength += Math.round(numUnknownChildSizes * defaultScrollLengthPerWrapGroup);\n    } else {\n      scrollLength = numberOfWrapGroups * defaultScrollLengthPerWrapGroup;\n    }\n\n    if (this.headerElementRef) {\n      scrollLength += this.headerElementRef.nativeElement.clientHeight;\n    }\n\n    let viewportLength = this.horizontal ? viewportWidth : viewportHeight;\n    let maxScrollPosition = Math.max(scrollLength - viewportLength, 0);\n\n    return {\n      childHeight: defaultChildHeight,\n      childWidth: defaultChildWidth,\n      itemCount: itemCount,\n      itemsPerPage: itemsPerPage,\n      itemsPerWrapGroup: itemsPerWrapGroup,\n      maxScrollPosition: maxScrollPosition,\n      pageCount_fractional: pageCount_fractional,\n      scrollLength: scrollLength,\n      viewportLength: viewportLength,\n      wrapGroupsPerPage: wrapGroupsPerPage,\n    };\n  }\n\n  protected cachedPageSize: number = 0;\n  protected previousScrollNumberElements: number = 0;\n\n  protected calculatePadding(arrayStartIndexWithBuffer: number, dimensions: IDimensions): number {\n    if (dimensions.itemCount === 0) {\n      return 0;\n    }\n\n    let defaultScrollLengthPerWrapGroup = dimensions[this._childScrollDim];\n    let startingWrapGroupIndex = Math.floor(arrayStartIndexWithBuffer / dimensions.itemsPerWrapGroup) || 0;\n\n    if (!this.enableUnequalChildrenSizes) {\n      return defaultScrollLengthPerWrapGroup * startingWrapGroupIndex;\n    }\n\n    let numUnknownChildSizes = 0;\n    let result = 0;\n    for (let i = 0; i < startingWrapGroupIndex; ++i) {\n      let childSize = this.wrapGroupDimensions.maxChildSizePerWrapGroup[i] && this.wrapGroupDimensions.maxChildSizePerWrapGroup[i][this._childScrollDim];\n      if (childSize) {\n        result += childSize;\n      } else {\n        ++numUnknownChildSizes;\n      }\n    }\n    result += Math.round(numUnknownChildSizes * defaultScrollLengthPerWrapGroup);\n\n    return result;\n  }\n\n  protected calculatePageInfo(scrollPosition: number, dimensions: IDimensions): IPageInfo {\n    let scrollPercentage = 0;\n    if (this.enableUnequalChildrenSizes) {\n      const numberOfWrapGroups = Math.ceil(dimensions.itemCount / dimensions.itemsPerWrapGroup);\n      let totalScrolledLength = 0;\n      let defaultScrollLengthPerWrapGroup = dimensions[this._childScrollDim];\n      for (let i = 0; i < numberOfWrapGroups; ++i) {\n        let childSize = this.wrapGroupDimensions.maxChildSizePerWrapGroup[i] && this.wrapGroupDimensions.maxChildSizePerWrapGroup[i][this._childScrollDim];\n        if (childSize) {\n          totalScrolledLength += childSize;\n        } else {\n          totalScrolledLength += defaultScrollLengthPerWrapGroup;\n        }\n\n        if (scrollPosition < totalScrolledLength) {\n          scrollPercentage = i / numberOfWrapGroups;\n          break;\n        }\n      }\n    } else {\n      scrollPercentage = scrollPosition / dimensions.scrollLength;\n    }\n\n    let startingArrayIndex_fractional = Math.min(Math.max(scrollPercentage * dimensions.pageCount_fractional, 0), dimensions.pageCount_fractional) * dimensions.itemsPerPage;\n\n    let maxStart = dimensions.itemCount - dimensions.itemsPerPage - 1;\n    let arrayStartIndex = Math.min(Math.floor(startingArrayIndex_fractional), maxStart);\n    arrayStartIndex -= arrayStartIndex % dimensions.itemsPerWrapGroup; // round down to start of wrapGroup\n\n    if (this.stripedTable) {\n      let bufferBoundary = 2 * dimensions.itemsPerWrapGroup;\n      if (arrayStartIndex % bufferBoundary !== 0) {\n        arrayStartIndex = Math.max(arrayStartIndex - arrayStartIndex % bufferBoundary, 0);\n      }\n    }\n\n    let arrayEndIndex = Math.ceil(startingArrayIndex_fractional) + dimensions.itemsPerPage - 1;\n    let endIndexWithinWrapGroup = (arrayEndIndex + 1) % dimensions.itemsPerWrapGroup;\n    if (endIndexWithinWrapGroup > 0) {\n      arrayEndIndex += dimensions.itemsPerWrapGroup - endIndexWithinWrapGroup; // round up to end of wrapGroup\n    }\n\n    if (isNaN(arrayStartIndex)) {\n      arrayStartIndex = 0;\n    }\n    if (isNaN(arrayEndIndex)) {\n      arrayEndIndex = 0;\n    }\n\n    arrayStartIndex = Math.min(Math.max(arrayStartIndex, 0), dimensions.itemCount - 1);\n    arrayEndIndex = Math.min(Math.max(arrayEndIndex, 0), dimensions.itemCount - 1);\n\n    let bufferSize = this.bufferAmount * dimensions.itemsPerWrapGroup;\n    let startIndexWithBuffer = Math.min(Math.max(arrayStartIndex - bufferSize, 0), dimensions.itemCount - 1);\n    let endIndexWithBuffer = Math.min(Math.max(arrayEndIndex + bufferSize, 0), dimensions.itemCount - 1);\n\n    return {\n      startIndex: arrayStartIndex,\n      endIndex: arrayEndIndex,\n      startIndexWithBuffer: startIndexWithBuffer,\n      endIndexWithBuffer: endIndexWithBuffer,\n      scrollStartPosition: scrollPosition,\n      scrollEndPosition: scrollPosition + dimensions.viewportLength,\n      maxScrollPosition: dimensions.maxScrollPosition\n    };\n  }\n\n  protected calculateViewport(): IViewport {\n    let dimensions = this.calculateDimensions();\n    let offset = this.getElementsOffset();\n\n    let scrollStartPosition = this.getScrollStartPosition();\n    if (scrollStartPosition > (dimensions.scrollLength + offset) && !(this.parentScroll instanceof Window)) {\n      scrollStartPosition = dimensions.scrollLength;\n    } else {\n      scrollStartPosition -= offset;\n    }\n    scrollStartPosition = Math.max(0, scrollStartPosition);\n\n    let pageInfo = this.calculatePageInfo(scrollStartPosition, dimensions);\n    let newPadding = this.calculatePadding(pageInfo.startIndexWithBuffer, dimensions);\n    let newScrollLength = dimensions.scrollLength;\n\n    return {\n      startIndex: pageInfo.startIndex,\n      endIndex: pageInfo.endIndex,\n      startIndexWithBuffer: pageInfo.startIndexWithBuffer,\n      endIndexWithBuffer: pageInfo.endIndexWithBuffer,\n      padding: Math.round(newPadding),\n      scrollLength: Math.round(newScrollLength),\n      scrollStartPosition: pageInfo.scrollStartPosition,\n      scrollEndPosition: pageInfo.scrollEndPosition,\n      maxScrollPosition: pageInfo.maxScrollPosition\n    };\n  }\n}\n\n@NgModule({\n  exports: [VirtualScrollerComponent],\n  declarations: [VirtualScrollerComponent],\n  imports: [CommonModule],\n  providers: [\n    {\n      provide: 'virtual-scroller-default-options',\n      useFactory: VIRTUAL_SCROLLER_DEFAULT_OPTIONS_FACTORY\n    }\n  ]\n})\nexport class VirtualScrollerModule {\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './virtual-scroller';\n"],"names":["tween.Tween","tween.Easing"],"mappings":"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"}